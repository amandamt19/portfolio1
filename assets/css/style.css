/*
  Overall, be sure to revise the organization
  and documentation of your CSS. Note this particular
  example, which writes the more general rules first,
  then mirrors the general hierarchy of the pages:
  https://github.com/lingeringcode/lindgren-datastory/blob/gh-pages/assets/css/style.css

  Also, be sure to mind your indentation and spacing throughout.
 */

@import url('https://fonts.googleapis.com/css?family=Slabo+27px');


html {
    font-size:18px;
}
html {
    font-size: 20px;}
h1 { font-size: 2.25rem;}
h2 { font-size: 1rem; font-style: unbold}
h3 {font-size: 1.125rem;}
h4 {font-size:1.05rem; font-style:italic;}

h1, h2, h3, p {
    font-family: 'Slabo 27px', serif;
}

.indexUL {
    list-style-type: none;
    margin: 0;
    padding: 0;
    overflow: hidden;
    background-color: #4799b7;
}
  li {
                float: left;
            }

            li a {
                display: block;
                color: white;
                text-align: center;
                padding: 14px 40px;
                text-decoration: none;
            }

            li a:hover {
                background-color: #6db3bf;
            }

ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
}

/*
  Be sure to revise your landing page with
  the lessons that we learned about responsive
  design with CSS grid and flexbox. This design
  uses the relative positioning scheme to overwrite
  normal flow behaviors of block elements, but it also
  introduces issues with regards to responsiveness.
*/
.container {
    position: relative;
    text-align: center;
    color: lightcyan;
    font-size: 30px;


}
/* Centered text */
.centered {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

/** {box-sizing: border-box}*/
body {
    margin: 20px;
}

/*
  You have a gorgeous resume (PDF), why not
  use grid to build on that design theme for
  your website? Especially the resume page.

  As it is, you plugged in a generic grid.
  One of our homework assignments involved taking
  our resume and considering how to design it
  with grid and flexbox.
 */
.wrapper {
    display: grid;
    grid-template-columns: auto auto auto;
    grid-template-rows: auto auto auto;
    grid-gap: 10px;
    background-color: white;
    color: #153641 ;
}

.resume-section {
    background-color:  #94cfc9;
    color: navy;
    border-radius: 5px;
    padding: 20px;
    font-size: 100%;
}

.footer {
    background-color:  #94cfc9;
    color: navy;
    border-radius: 5px;
    padding: 20px;
    font-size: 100%;
    grid-column: 1 / 4;
    text-align: center;
}

.school {
    font-size: 12px;
}
